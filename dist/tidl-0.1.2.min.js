(function () { "uses strict;"; function e(e, t) { if (e === undefined || t === undefined) return false; if (e === null || t === null) return false; if (e.length < t.length) return false; if (e.substr(e.length - t.length, t.length) === t) return true; return false } function t() { this.Name = ""; this.Type = "String"; this.Values = []; return this } function n() { this.Name = ""; this.Types = []; return this } function r() { this.Name = ""; this.Type = new n; this.Modifiers = []; this.Mandatory = false; return this } function s() { this.Name = ""; this.Return = new n; this.Parameters = {}; this.Attributes = []; this.Exceptions = []; this.BaseTypes = []; this.IsAsync = false; this.type = ""; return this } function o() { this.Name = ""; this.Service = ""; this.Attributes = []; this.Operations = []; this.Types = []; this.Enumerations = []; this.Exceptions = []; this.Events = []; return this } function u() { this.Service = ""; this.Attributes = []; this.Types = []; this.Enumerations = []; this.Exceptions = []; this.Events = []; this.Interfaces = {}; return this } function f(t) { t = t.replace("//", "/"); t = t[0] == "/" ? t.substr(1) : t; return e(t, "/") ? t.substr(0, t.length - 1) : t } function v(e, t, n) { var r = ""; if (t === null || t === undefined) return r; if (t.Operations !== null && t.Operations.length > 0) { var i = null; for (var s in t.Operations) { i = t.Operations[s]; if (i.Name == e.Name) { break } i = null } if (i === null) { return r } var o = i.getAttribute(l); if (n == l && o !== null) { return o.Values[0] } var u = i.getAttribute(c); if (n == c && u !== null) { return u.Values[0] } var a = i.getAttribute(h); if (n == h && a !== null) { return a.Values[0] } } return r } function m(t, n) { var r = v(t, n, c); var i = v(t, n, h); var s = 0; var o = null; if (r === null || r === "") { for (s = 0; s < a.length; ++s) { var u = a[s]; if (t.Name.toLowerCase().indexOf(u[0].toLowerCase()) === 0) { o = u; break } } r = o !== null ? o[1] : "GET" } if (r == "GET" || r == "DELETE") { if (i && i !== "") { r = "POST" } for (var f in t.Parameters) { if (e(f, d)) { r = "POST" } } } return r } function g(t) { return e(t.Name, d) ? t.Name.substr(0, t.Name.length - 8) : t.Name } function y(t, n, r) { if ((r === null || r === undefined || r === "") && e(t.Name, d)) return true; if (!(r === null || r === undefined || r === "") && t.Name == r) return true; if (n === null || n === undefined || n === "") { if (t.Mandatory && !(t.Type.Name.indexOf("set") === 0 || t.Type.Name.indexOf("list") === 0)) { return true } } else { if (n.indexOf("{" + t.Name + "}") > 0) { return true } } return false } function b(t, n) { var r = v(t, n, l); var i = v(t, n, h); if (!(i === null || i === undefined || i === "")) return i; for (var s in t.Parameters) { var o = t.Parameters[s]; if ((i === null || i === undefined || i === "") && e(o.Name, d)) return s } return "" } function w(e, t) { var n = v(e, t, l); var r = v(e, t, h); var i = true; var s = ""; for (var o in e.Parameters) { var u = e.Parameters[o]; if (y(u, n, r)) continue; if (i) { s += "?"; i = false } else { s += "&" } s += g(u) + "={" + g(u) + "...}" } return s } function E(t, n, r) { var i = v(t, r, l); if (i && i !== "") { return f(i) } var s = 0; var o = null; for (s = 0; s < a.length; ++s) { var u = a[s]; if (t.Name.toLowerCase().indexOf(u[0].toLowerCase()) === 0) { o = u; break } } i = o !== null ? o[2] : ""; var c = t.Name; if (e(t.Name, "Feed")) { i += "feed"; c = c.substr(0, c.length - 4) } if (e(t.Name.toLowerCase(), n.Name.toLowerCase())) { c = c.substr(0, c.length - n.Name.length) } var h = ""; if (o !== null && o[0].length != c.length) { h = "/" + c.substr(o[0].length).toLowerCase() } var p = ""; var g = true; var y = ""; for (var b in t.Parameters) { var w = t.Parameters[b]; if (w.Mandatory && !e(w.Name, d) && w.Type.Name != "set" && w.Type.Name != "list") { if (e(h.toLowerCase(), "by" + w.Name.toLowerCase()) || e(h.toLowerCase(), "to" + w.Name.toLowerCase())) { y = "/{" + w.Name.toLowerCase() + "}" + h.substr(0, h.length - (w.Name.length + 2)); h = y } else if (e(h.toLowerCase(), "from" + w.Name.toLowerCase())) { y = "/{" + w.Name.toLowerCase() + "}" + h.substr(0, h.length - (w.Name.length + 4)); h = y } else if (e(h.toLowerCase(), w.Name.toLowerCase())) { h = "/{" + w.Name.toLowerCase() + "}" } else { p += "/{" + w.Name.toLowerCase() + "}" } } } i += h; if (o !== null && !(o[3] === null || o[3] === "")) { i += "/" + o[3] } else if (o !== null && (o[3] === null || o[3] === "") && o[1].toLowerCase() != m(t, r).toLowerCase()) { i += "/" + o[0] } else if (o === null && e(c.toLowerCase(), n.Name.toLowerCase())) { i += "/" + c.toLowerCase().substr(0, c.length - n.Name.length) } i += p; return f(i) } function S(e, t) { var n = "500"; if (t === null || t === undefined) return n; for (var r in t.Exceptions) { var i = t.Exceptions[r]; if (i.Name === e.Name) { var s = i.getAttribute(p); if (s !== null && s !== undefined && s.Values.length > 0) return s.Values[0].trim() } } for (var o in t.Interfaces) { intfAnno = t.Interfaces[o]; for (var r in intfAnno.Exceptions) { var i = intfAnno.Exceptions[r]; if (i.Name === e.Name) { var s = i.getAttribute(p); if (s !== null && s !== undefined && s.Values.length > 0) return s.Values[0].trim() } } } return n.trim() } function T(e, t) { function i(e, t) { for (var n = 0; n < e.length; n++) { if (typeof t == "function") { var r = t(e[n], n); if (r) return e[n] } else if (e[n] == t) { return t } } return false } function s(e, t) { return function (n, r) { var i = "", s, o = false, u = false; while ((s = n.next()) || false) { if (s === e && !u) { o = true; break } i += s; u = !u && s === "\\" } if (o) { r.tokenizers.shift() } var a = e === "`" || e === ")" ? "quote" : "string"; r.lastToken = "v"; var f = r.context[0]; if (f) { try { f.Values[f.Values.length - 1] = f.Values[f.Values.length - 1] + i.replace(/\\/g, "") + (o ? "" : "\n") } catch (l) { } return a + r.ec } return a } } function o() { return function (t, n) { var r, i = false; while ((r = t.next()) || false) { if (r + t.peek() === "*/") { t.next(); i = true; break } } if (i) { n.tokenizers.shift() } var s = "comment"; return s } } function u() { return function (t, s) { if (t.eatSpace()) { return null } if (t.match("//")) { t.skipToEnd(); return "comment" } if (t.match("/*")) { s.tokenizers.unshift(o()); return w(t, s) } var u; var a = s.context[0]; if (s.lastToken === "" || s.lastToken == ",") { if ((u = t.match(n)) !== null) { s.lastToken = "i"; a.push(u[0]); if (i(r, u[0])) { return "builtin" } return "variable-2" } } else if (s.lastToken == "i") { if (t.eat(",")) { s.lastToken = ","; return null } else if (t.eat("{")) { s.context.shift(); s.tokenizers.shift(); s.lastToken = ""; s.tokenizers.unshift(h()); return "bracket" } } t.next(); return "error error-mark m-2003" } } function a() { return function (t, s) { if (t.eatSpace()) { return null } if (t.match("//")) { t.skipToEnd(); return "comment" } if (t.match("/*")) { s.tokenizers.unshift(o()); return w(t, s) } var u; var a = s.context[0]; var l = s.context[1]; if (a.Name === "") { if ((u = t.match(n)) !== null) { a.Name = u[0]; s.lastToken = "t"; if (i(r, u[0])) { return "builtin" } return "variable-2" } } else if (t.peek() == "<") { t.next(); s.lastToken = "<"; s.context.unshift([]); s.tokenizers.unshift(f()); return "operator" } else { if (l instanceof Array) { l.push(a) } s.context.shift(); s.tokenizers.shift(); return w(t, s) } } } function f() { return function (t, s) { if (t.eatSpace()) { return null } if (t.match("//")) { t.skipToEnd(); return "comment" } if (t.match("/*")) { s.tokenizers.unshift(o()); return w(t, s) } var u; var l = s.context[0]; var c = s.context[1]; var h; if (s.lastToken == "<" || s.lastToken == ",") { if ((u = t.match(n, false)) !== null) { s.context.unshift(new x.IdlType); s.tokenizers.unshift(a()); return w(t, s) } } else if (s.lastToken == "t") { if (t.eat(",")) { s.lastToken = ","; return null } else if (t.eat(">")) { s.lastToken = ">"; c.Types = l.concat([]); s.context.shift(); s.tokenizers.shift(); return "operator" } } if (t.eat(",")) { return null } else if (t.eat("<")) { h = obj.parameters[obj.parameters.length - 1]; s.context.unshift(h); s.tokenizers.unshift(f()); return "operator" } else if ((u = t.match(n)) !== null) { h = { name: u[0], type: "dataType", parameters: [] }; obj.parameters.push(h); if (i(r, u[0])) { return "builtin" } return "variable-2" } if (t.eat(">")) { s.context.shift(); s.tokenizers.shift(); return "operator" } t.skipToEnd(); s.tokenizers.shift(); s.context.shift(); return "error" } } function l() { return function (t, r) { if (t.eatSpace()) { return null } if (t.match("//")) { t.skipToEnd(); return "comment" } if (t.match("/*")) { r.tokenizers.unshift(o()); return w(t, r) } var i; var s = r.context[0]; var u = r.context[1]; if ((i = t.match(n, false)) !== null) { if (i[0] == "mandatory" && u.type != "enumeration" && s.Mandatory === false) { t.match(n); s.Modifiers.push(i[0]); s.Mandatory = true; return "keyword" } else if (u.type == "enumeration") { t.match(n); s.Name = i[0]; r.lastToken = "p"; u.Parameters[s.Name] = s; r.context.shift(); r.tokenizers.shift(); u.Parameters[i[0]] = s; return "variable" } else if (s.Type.Name === "") { r.context.unshift(s.Type); r.tokenizers.unshift(a()); return w(t, r) } else { t.match(n); s.Name = i[0]; r.lastToken = "p"; u.Parameters[s.Name] = s; r.context.shift(); r.tokenizers.shift(); return "variable" } } t.next(); return "error error-mark m-2003" } } function c() { return function (t, r) { if (t.eatSpace()) { return null } if (t.match("//")) { t.skipToEnd(); return "comment" } if (t.match("/*")) { r.tokenizers.unshift(o()); return w(t, r) } var i; var s = r.context[0]; var u = r.context[1]; var a; if (r.lastToken == "(") { if ((i = t.match(n, false)) !== null) { a = new x.IdlParam; r.context.unshift(a); r.tokenizers.unshift(l()); return w(t, r) } } else if (r.lastToken == "p") { if (t.eat(",")) { r.lastToken = ","; a = new x.IdlParam; r.context.unshift(a); r.tokenizers.unshift(l()); return null } } if (t.eat(")") === ")") { r.lastToken = ")"; r.tokenizers.shift(); return null } t.next(); if (r.inError()) { return "error" + r.ec } else { return "error error-mark m-2003" } } } function h() { return function (t, r) { if (t.eatSpace()) { return null } if (t.match("//")) { t.skipToEnd(); return "comment" } if (t.match("/*")) { r.tokenizers.unshift(o()); return w(t, r) } var s = r.context[0]; var u = r.context[1]; if (t.peek() == "@") { t.next(); var a = new x.IdlAttr; if ((matches = t.match(n, true)) !== null) { a.Name = matches[0]; if (i(["description", "parameter", "since", "revision", "exception", "return", "value", "seealso"], a.Name) === false) { r.setWarn(1007) } r.context.unshift(a); r.tokenizers.unshift(y()); return "attribute em" + r.ec } else { t.skipToEnd(); r.ec = ""; return "error error-mark m-2003" } } else if (t.peek() == "}") { r.tokenizers.shift(); return "bracket" } t.skipToEnd(); r.tokenizers.shift(); return "error error-mark m-2003" } } function p() { return function (t, r) { if (t.eatSpace()) { return null } if (t.match("//")) { t.skipToEnd(); return "comment" } if (t.match("/*")) { r.tokenizers.unshift(o()); return w(t, r) } var i = r.context[0]; var s = r.context[1]; var a; if (i.Name === "") { if ((a = t.match(n)) !== null) { r.lastToken = "i"; i.Name = a[0]; if (i.type == "operation") { return "def strong" } else { return "variable-2 strong" } } } else if (r.lastToken == "i" && t.peek() == "(") { r.tokenizers.unshift(c()); t.next(); r.lastToken = "("; return null } else if (r.lastToken == ")") { if ((a = t.match(n, false)) !== null) { if (a == "throws") { if (i.type == "operation") { r.lastToken = ""; r.context.unshift(i.Exceptions); r.tokenizers.unshift(u()); t.match(n); return "keyword" } } else if (a == "extends") { if (i.type == "type") { r.lastToken = ""; r.context.unshift(i.BaseTypes); r.tokenizers.unshift(u()); t.match(n); return "keyword" } } } else if (t.eat("{")) { r.lastToken = ""; r.tokenizers.unshift(h()); return "bracket" } } else if (t.eat("}")) { r.lastToken = ""; try { s[i.type.toUpperCase()[0] + i.type.substr(1) + "s"].push(i) } catch (f) { } r.context.shift(); r.tokenizers.shift(); return "bracket" } t.skipToEnd(); r.tokenizers.shift(); return "error error-mark m-2003" } } function d() { return function (t, r) { if (t.eatSpace()) { return null } if (t.match("//")) { t.skipToEnd(); return "comment" } if (t.match("/*")) { r.tokenizers.unshift(o()); return w(t, r) } var s = r.context[0]; var u = r.context[1]; var f; var l; if (t.peek() == "}") { t.next(); r.context.shift(); r.tokenizers.shift(); if (!r.inError()) { try { u.Interfaces[s.Name] = s } catch (c) { } } return "bracket" } if (t.peek() == "@") { t.next(); var h = new x.IdlAttr; if ((f = t.match(n, true)) !== null) { h.Name = f[0]; if (i(["description", "owner", "version", "revision", "author", "reviewer", "organisation", "namespacePrefix", "organisationDomainName"], h.Name) === false) { r.setWarn(1003) } r.context.unshift(h); r.tokenizers.unshift(y()); return "attribute em" + r.ec } else { t.skipToEnd(); r.ec = ""; return "error error-mark m-2003" } } if ((f = t.match(n, false)) !== null) { if (i(["type", "event", "exception", "enumeration"], f[0])) { t.match(n); l = new x.IdlOps; l.type = f[0]; l.Return = new x.IdlType; l.Return.Name = f[0]; r.context.unshift(l); r.tokenizers.unshift(p()); return "keyword" } else { var d = ""; l = new x.IdlOps; l.type = "operation"; if (f[0] === "async") { t.match(n); l.IsAsync = true; d = "keyword" } else { l.IsAsync = false } r.context.unshift(l); r.context.unshift(l.Return); r.tokenizers.unshift(p()); r.tokenizers.unshift(a()); if (d !== "") { return d } return w(t, r) } } t.skipToEnd(); r.context.shift(); r.tokenizers.shift(); if (!r.inError()) { r.setError(2003) } return "error" + r.ec } } function v() { return function (t, r) { if (t.eatSpace()) { return null } if (t.match("//")) { t.skipToEnd(); return "comment" } if (t.match("/*")) { r.tokenizers.unshift(o()); return w(t, r) } var i = r.context[0]; var s = r.context[1]; var u = s.Service; var a; if (i.Service === "") { if ((a = t.match(n)) !== null) { if (i.Name !== "") { if (r.lastToken == "k") { i.Service = a[0]; r.ec = ""; if (u !== "") { if (i.Service.toLowerCase() != u.toLowerCase()) { r.setError(2012); return "error " + r.ec } } else if (i.Service.toUpperCase()[0] != i.Service[0]) { s.Service = i.Service; return "def info-mark m-3001" } else { s.Service = i.Service } return "def" } else if (a[0] === "exposes") { r.lastToken = "k"; r.ec = ""; return "keyword" } else { r.setError(2011) } } else { i.Name = a[0]; r.ec = ""; r.lastToken = "d"; if (i.Name.toUpperCase()[0] != i.Name[0]) { return "def info-mark m-3001" } return "def" } } else { if (u !== "" && i.Name !== "" && t.peek() == "{") { i.Service = u; t.next(); r.tokenizers.shift(); r.tokenizers.unshift(d()); return "bracket" } r.setError(2010) } } if ((i.Service !== "" || u !== "") && t.peek() == "{") { if (i.Service === "") { i.Service = u } t.next(); r.tokenizers.shift(); r.tokenizers.unshift(d()); return "bracket" } t.skipToEnd(); r.context.shift(); r.tokenizers.shift(); if (!r.inError()) { r.setError(2003) } return "error" + r.ec } } function m() { return function (t, r) { if (t.eatSpace()) { return null } if (t.match("//")) { t.skipToEnd(); return "comment" } if (t.match("/*")) { r.tokenizers.unshift(o()); return w(t, r) } var s = r.context[0]; var u = r.context[1]; var a; if (t.peek() == "}") { t.next(); r.context.shift(); r.tokenizers.shift(); return "bracket" } if (t.peek() == "@") { t.next(); var f = new x.IdlAttr; if ((a = t.match(n, true)) !== null) { f.Name = a[0]; if (i(["description", "owner", "organisation", "namespacePrefix", "organisationDomainName"], f.Name) === false) { r.setWarn(1006) } r.context.unshift(f); r.tokenizers.unshift(y()); return "attribute em" + r.ec } else { t.skipToEnd(); r.ec = ""; return "error error-mark m-2003" } } if ((a = t.match(/^interface\s/)) !== null) { var l = new x.IdlIntf; r.ec = ""; r.context.unshift(l); r.tokenizers.unshift(v()); return "keyword" } if ((a = t.match(n, false)) !== null) { if (i(["type", "event", "exception", "enumeration"], a[0])) { t.match(n); var c = new x.IdlOps; c.type = a[0]; c.Return = new x.IdlType; c.Return.Name = a[0]; r.context.unshift(c); r.tokenizers.unshift(p()); return "keyword" } } t.skipToEnd(); r.context.shift(); r.tokenizers.shift(); if (!r.inError()) { r.setError(2003) } return "error" + r.ec } } function g() { return function (t, r) { if (t.eatSpace()) { return null } if (t.match("//")) { t.skipToEnd(); return "comment" } if (t.match("/*")) { r.tokenizers.unshift(o()); return w(t, r) } var i = r.context[0]; var s = r.context[1]; var u; if (i.Service === "") { if ((u = t.match(n)) !== null) { i.Service = u[0]; r.ec = ""; if (i.Service.toUpperCase()[0] != i.Service[0]) { return "def info-mark m-3001" } return "def" } } if (i.Service !== "" && t.peek() == "{") { t.next(); r.tokenizers.shift(); r.tokenizers.unshift(m()); return "bracket" } t.skipToEnd(); r.context.shift(); r.tokenizers.shift(); if (!r.inError()) { r.setError(2003) } return "error" + r.ec } } function y() { return function (t, r) { if (t.eatSpace()) { return null } if (t.match("//")) { t.skipToEnd(); return "comment" } if (t.match("/*")) { r.tokenizers.unshift(o()); return w(t, r) } var u = r.context[0]; var a = r.context[1]; var f = t.peek(); if (f === ";") { t.next(); r.context.shift(); r.tokenizers.shift(); if (r.lastToken != "v") { r.lastToken = ""; r.ec = ""; return "error error-mark m-2003" } r.lastToken = ""; try { if (!r.inError()) { a.Attributes.push(u) } } catch (l) { } r.ec = ""; return null } var c; if (u.Values.length === 0) { if (i(["parameter", "exception", "value"], u.Name)) { if ((c = t.match(n)) !== null) { u.Values.push(c[0]); u.Type = "Parameter"; r.lastToken = "v"; return "variable " + r.ec } else if (!r.inError()) { r.setError(2004) } } else if (i(["tidl", "version", "since", "revision"], u.Name)) { if ((c = t.match(/\d+\.\d+.\d+(\-[0-9a-zA-Z]+(\.[0-9a-zA-Z]+)*)?(\+[0-9a-zA-Z]+(\.[0-9a-zA-Z]+)*)?/, true)) !== null) { u.Values.push(c[0]); u.Type = "Version"; r.lastToken = "v"; return "number " + r.ec } else if (!r.inError()) { r.setError(2005) } } else if (f != '"' && f != "'") { if (!r.inError()) { r.setError(2006) } } else { r.lastToken = "v"; u.Values.push(""); r.tokenizers.unshift(s(t.next(), t.column())); return w(t, r) } } if (f == ",") { t.next(); if (r.lastToken != "v") { r.setError(2003); r.lastToken = ","; return "error" + r.ec } r.lastToken = ","; return null } if (f == '"' || f == "'") { if (r.lastToken != ",") { r.setError(2003) } if (u.Name == "tidl" && r.ec === "") { r.setWarn(1002) } u.Values.push(""); r.tokenizers.unshift(s(t.next(), t.column())); return w(t, r) } t.next(); return "error error-mark m-2003" } } function b(e, t) { var r; if (e.eatSpace()) { return null } if (e.match("//")) { e.skipToEnd(); return "comment" } if (e.match("/*")) { t.tokenizers.unshift(o()); return w(e, t) } var s = t.context[0]; if (e.eat("@")) { var u = new x.IdlAttr; t.ec = ""; if ((r = e.match(n, true)) !== null) { u.Name = r[0]; if (i(["tidl"], u.Name) === false) { t.setWarn(1001) } else { try { if (i(s.Attributes, function (e) { return e.Name == "tidl" })) { t.setWarn(1004) } } catch (a) { } } t.context.unshift(u); t.tokenizers.unshift(y()); return "attribute em" + t.ec } else { e.skipToEnd(); return "error error-mark m-2001" } } if ((r = e.match(/^service\s/)) !== null) { var f = i(s.Attributes, function (e) { return e.Name == "tidl" }); if (f === false || f.Values[0].charAt(0) != "2") { e.skipToEnd(); return "error error-mark m-1005" } t.ec = ""; t.context.unshift(s); t.tokenizers.unshift(g()); return "keyword" } if ((r = e.match(/^interface\s/)) !== null) { var l = new x.IdlIntf; t.ec = ""; t.context.unshift(l); t.tokenizers.unshift(v()); return "keyword" } else { e.next(); return "error error-mark m-2002" } } function w(e, t) { return (t.tokenizers[0] || b)(e, t) } var n = /^[a-zA-Z][a-zA-Z0-9_]*/; var r = ["boolean", "byte", "short", "int", "long", "float", "double", "decimal", "string", "datetime", "list", "set", "map"]; return { token: function (t, n) { if (n.context.length === 0) { n.context.push(n.model) } if (t.eol()) { return null } return w(t, n) }, startState: function () { return { tokenizers: [], context: [], lastToken: "", ec: "", model: e.model === undefined ? new x.IdlModel : e.model, inError: function () { return this.ec.indexOf("error-mark") !== -1 }, setError: function (e) { this.ec = " error-mark m-" + e }, setWarn: function (e) { this.ec = " warning-mark m-" + e }, setInfo: function (e) { this.ec = " info-mark m-" + e } } }, copyState: function (t) { if (t === true) return t; var n = {}; var r; for (var i in t) { var s = t[i]; if (s !== undefined) { if (s instanceof Array) { var o = []; for (r = 0; r < s.length; ++r) { var u = s[r]; if (u.clone && typeof u.clone == "function") { o.push(u.clone()) } else { o.push(u) } } s = o } else if (s.clone && typeof s.clone == "function") { s = s.clone() } } n[i] = s } return n }, electricChars: "}", blockCommentStart: "/*", blockCommentEnd: "*/", fold: "brace" } } function C(e, t, n, r, i) { if (t === null) { t = e.search(/[^\s\u00a0]/); if (t == -1) t = e.length } for (var s = r || 0, o = i || 0; s < t; ++s) { if (e.charAt(s) == "	") o += n - o % n; else ++o } return o } t.prototype.clone = function () { var n = new t; n.Name = this.Name; n.Type = this.Type; n.Values = this.Values.concat([]); return n }; n.prototype.clone = function () { var t = new n; t.Name = this.Name; for (var r = 0; r < this.Types.length; ++r) { var i = this.Types[r]; t.Types.push(i.clone()) } return t }; r.prototype.clone = function () { var t = new r; t.Name = this.Name; t.Type = this.Type.clone(); t.Modifiers = this.Modifiers.concat([]); t.Mandatory = this.Mandatory; return t }; s.prototype.getAttribute = function (t) { for (i = 0; i < this.Attributes.length; ++i) { var n = this.Attributes[i]; if (n.Name == t) { return n } } return null }; s.prototype.getDescription = function () { var t = this.getAttribute("description"); if (t) { return t.Values[0] } return null }; s.prototype.clone = function () { var t; var n = new s; n.Name = this.Name; n.Return = this.Return.clone(); for (var r in this.Parameters) { var i = this.Parameters[r]; n.Parameters[i.Name] = i.clone() } for (t = 0; t < this.Attributes.length; ++t) { var o = this.Attributes[t]; n.Attributes.push(o.clone()) } n.Exceptions = this.Exceptions.concat([]); n.BaseTypes = this.BaseTypes.concat([]); n.IsAsync = this.IsAsync; n.type = this.type; return n }; o.prototype.clone = function () { var t; var n = new o; n.Name = this.Name; n.Service = this.Service; for (t = 0; t < this.Attributes.length; ++t) { var r = this.Attributes[t]; n.Attributes.push(r.clone()) } for (t = 0; t < this.Operations.length; ++t) { var i = this.Operations[t]; n.Operations.push(i.clone()) } for (t = 0; t < this.Types.length; ++t) { var s = this.Types[t]; n.Types.push(s.clone()) } for (t = 0; t < this.Enumerations.length; ++t) { var u = this.Enumerations[t]; n.Enumerations.push(u.clone()) } for (t = 0; t < this.Exceptions.length; ++t) { var a = this.Exceptions[t]; n.Exceptions.push(a.clone()) } for (t = 0; t < this.Events.length; ++t) { var f = this.Events[t]; n.Events.push(f.clone()) } return n }; u.prototype.clone = function () { var t; var n = new u; n.Service = this.Service; for (t = 0; t < this.Attributes.length; ++t) { var r = this.Attributes[t].clone(); n.Attributes.push(r) } for (t = 0; t < this.Types.length; ++t) { var i = this.Types[t]; n.Types.push(i.clone()) } for (t = 0; t < this.Enumerations.length; ++t) { var s = this.Enumerations[t]; n.Enumerations.push(s.clone()) } for (t = 0; t < this.Exceptions.length; ++t) { var o = this.Exceptions[t]; n.Exceptions.push(o.clone()) } for (t = 0; t < this.Events.length; ++t) { var a = this.Events[t]; n.Events.push(a.clone()) } for (var f in this.Interfaces) { var l = this.Interfaces[f].clone(); n.Interfaces[f] = l } return n }; var a = [["calculate", "GET", "", ""], ["getFrom", "GET", "", ""], ["getby", "GET", "", ""], ["get", "GET", "", ""], ["searchby", "GET", "", "search"], ["search", "GET", "search", ""], ["history", "GET", "", "history"], ["retrieve", "POST", "", "retrieve"], ["deleteFrom", "DELETE", "", ""], ["delete", "DELETE", "", ""], ["update", "PUT", "", ""], ["revoke", "PUT", "", "revoke"], ["rename", "PUT", "", "rename"], ["extend", "PUT", "", "extend"], ["unlockAccountBy", "PUT", "unlockaccount", ""], ["validate", "GET", "validate", ""], ["createOrUpdate", "POST", "", ""], ["create", "POST", "", ""], ["open", "POST", "", ""], ["issue", "POST", "issue", ""], ["reserve", "POST", "", "reserve"], ["confirm", "POST", "", "confirm"], ["unreserve", "POST", "", "unreserve"], ["redeem", "POST", "", "redeem"], ["restore", "POST", "", "restore"], ["activate", "POST", "", "activate"], ["deactivate", "POST", "", "deactivate"], ["approve", "POST", "", "approve"], ["reject", "POST", "", "reject"], ["add", "POST", "", ""], ["propose", "POST", "", ""], ["adjust", "POST", "adjust", ""], ["move", "POST", "move", ""], ["render", "POST", "", "render"], ["register", "POST", "", ""], ["reject", "DELETE", "", ""], ["remove", "DELETE", "", ""], ["cancel", "DELETE", "", ""], ["close", "DELETE", "", ""]]; var l = "urlTemplate"; var c = "method"; var h = "bodyParam"; var p = "statusCode"; var d = "FromBody"; u.prototype.Version = function () { var e = { Major: 0, Minor: 0, Build: 0 }; for (i = 0; i < this.Attributes.length; ++i) { if (this.Attributes[i].Name == "version") { var t = this.Attributes[i].Values[0].split("."); e.Major = t[0]; e.Minor = t[1]; e.Build = t[2]; break } } return e }; o.prototype.Version = function () { var e = { Major: 0, Minor: 0, Build: 0 }; for (i = 0; i < this.Attributes.length; ++i) { if (this.Attributes[i].Name == "version") { var t = this.Attributes[i].Values[0].split("."); e.Major = t[0]; e.Minor = t[1]; e.Build = t[2]; break } } return e }; u.prototype.updateEndpoints = function (e) { var n = this; var r; var i; for (var s in n.Interfaces) { var o = n.Interfaces[s]; if (e) { try { i = e.Interfaces[s] } catch (u) { } } for (var a in o.Operations) { var f = o.Operations[a]; var l = null; for (r = 0; r < f.Attributes.length; ++r) { if (f.Attributes[r].Name == "restendpoint") { l = f.Attributes[r]; break } } if (l === null) { l = new t; l.Name = "restendpoint"; f.Attributes.push(l) } else { l.Values = [] } var c = o.Version().Major == 0 ? n.Version().Major : o.Version().Major; l.Values.push(m(f, i)); l.Values.push("v" + c + "/" + o.Name.toLowerCase() + "/" + E(f, o, i)); l.Values.push(w(f, i)); l.Values.push(b(f, i)) } } }; u.prototype.updateExceptionTypes = function (e) { var n = this; var r; for (var i in n.Exceptions) { var s = n.Exceptions[i]; var o = null; for (r = 0; r < s.Attributes.length; ++r) { if (s.Attributes[r].Name == "resthttpstatus") { o = s.Attributes[r]; break } } if (o === null) { o = new t; o.Name = "resthttpstatus"; s.Attributes.push(o) } else { o.Values = [] } o.Values.push(S(s, e)) } for (var u in n.Interfaces) { var a = n.Interfaces[u]; for (var i in a.Exceptions) { var s = a.Exceptions[i]; var f = null; for (r = 0; r < s.Attributes.length; ++r) { if (s.Attributes[r].Name == "resthttpstatus") { f = s.Attributes[r]; break } } if (f === null) { f = new t; f.Name = "resthttpstatus"; s.Attributes.push(f) } else { f.Values = [] } f.Values.push(S(s, e)) } } }; var x = { IdlModel: u, IdlAttr: t, IdlIntf: o, IdlOps: s, IdlType: n, IdlParam: r, Messages: { 1e3: "Unknown error", 1001: "Unsupported attribute: Expecting 'tidl' attribute.", 1002: "Unused value: Will be ignored.", 1003: "Unsupported attribute: Expecting one of 'description', 'owner', 'version', 'revision', 'author', 'reviewer', 'organisation', 'namespacePrefix', 'organisationDomainName'.", 1004: "Duplicate: Will be ignored.", 1005: "Unsupported in tidl 1.x.x files, please change the tidl version to 2.0.0;", 1006: "Unsupported attribute: Expecting one of 'description', 'owner', 'organisation', 'namespacePrefix', 'organisationDomainName'.", 1007: "Unsupported attribute: Expecting one of 'description', 'parameter', 'since','revision', 'exception', 'return','value','seealso'.", 2001: "Unexpected character: Expecting an attribute type like description, parameter etc,.", 2002: "Unexpected character: Expecting an attribute or a interface definition.", 2003: "Unexpected character: Bad syntax.", 2004: "Unexpected character: Expecting an ID as the first value for the attributes 'parameter', 'exception' or 'value'.", 2005: "Unexpected character: Expecting an n.n.n version as the first value for the attributes 'tidl', 'version', 'since' or 'revision'.", 2006: "Unexpected character: Expecting a string as the first value for the attribute.", 2007: "", 2008: "", 2009: "", 2010: "Unexpected character: Expected a valid interface name.", 2011: "Unexpected character: Expected 'exposes' keyword.", 2012: "Mismatched Service. The Service Name in Service decleration and interface do not match.", 3001: "Standards: Suggested to start with a capital letter." } }; var N = {}; N.StringStream = function (t, n) { this.pos = this.start = 0; this.string = t; this.tabSize = n || 8; this.lastColumnPos = this.lastColumnValue = 0 }; N.StringStream.prototype = { eol: function () { return this.pos >= this.string.length }, sol: function () { return this.pos === 0 }, peek: function () { return this.string.charAt(this.pos) || undefined }, next: function () { if (this.pos < this.string.length) return this.string.charAt(this.pos++) }, eat: function (e) { var t = this.string.charAt(this.pos); var n; if (typeof e == "string") n = t == e; else n = t && (e.test ? e.test(t) : e(t)); if (n) { ++this.pos; return t } }, eatWhile: function (e) { var t = this.pos; while (this.eat(e)) { } return this.pos > t }, eatSpace: function () { var e = this.pos; while (/[\s\u00a0]/.test(this.string.charAt(this.pos)))++this.pos; return this.pos > e }, skipToEnd: function () { this.pos = this.string.length }, skipTo: function (e) { var t = this.string.indexOf(e, this.pos); if (t > -1) { this.pos = t; return true } }, backUp: function (e) { this.pos -= e }, column: function () { if (this.lastColumnPos < this.start) { this.lastColumnValue = C(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue); this.lastColumnPos = this.start } return this.lastColumnValue }, indentation: function () { return C(this.string, null, this.tabSize) }, match: function (e, t, n) { if (typeof e == "string") { var r = function (e) { return n ? e.toLowerCase() : e }; var i = this.string.substr(this.pos, e.length); if (r(i) == r(e)) { if (t !== false) this.pos += e.length; return true } } else { var s = this.string.slice(this.pos).match(e); if (s && s.index > 0) return null; if (s && t !== false) this.pos += s[0].length; return s } }, current: function () { return this.string.slice(this.start, this.pos) } }; N.splitLines = "\n\nb".split(/\n/).length != 3 ? function (e) { var t = 0, n = [], r = e.length; while (t <= r) { var i = e.indexOf("\n", t); if (i == -1) i = e.length; var s = e.slice(t, e.charAt(i - 1) == "\r" ? i - 1 : i); var o = s.indexOf("\r"); if (o != -1) { n.push(s.slice(0, o)); t += o + 1 } else { n.push(s); t = i + 1 } } return n } : function (e) { return e.split(/\r\n?|\n/) }; if (this.CodeMirror || false) { CodeMirror.defineMode("tidl", T); N.StringStream = CodeMirror.StringStream; N.splitLines = CodeMirror.splitLines } x.parseWithAnnotations = function (t, n) { var r = x.parse(t); var i = null; if (n) { i = x.parse(n) } if (r !== null && r.model !== null) { if (i !== null && i.model !== null) { r.model.updateEndpoints(i.model); r.model.updateExceptionTypes(i.model) } else { r.model.updateEndpoints(null); r.model.updateExceptionTypes(null) } } return [r, i] }; x.parse = function (t, n) { var r = T({}, {}); var i = r.startState(); var s = []; if (t === null || t === undefined) { return null } var o = N.splitLines(t); o.forEach(function (e, t, o) { var u = new N.StringStream(e, n || 4); var a = r.token; var f; while (!u.eol()) { var l = u.pos; f = a(u, i); u.start = u.pos; var c = u.pos; if (f) { var h = f.indexOf("error-mark") != -1, p = f.indexOf("warning-mark") != -1, d = f.indexOf("info-mark") != -1; if (h || p || d) { var v = f.indexOf("m-"); var m = f.substr(v + 2); s.push({ line: t + 1, col: l, charcount: c - l, code: m, type: h ? "error" : p ? "warning" : "info" }) } } } }); return { model: i.model, messages: s } }; var k = this, L = k.tidl; if (typeof module !== "undefined" && module.exports) { module.exports = x } else { k.tidl = x } x.noConflict = function () { k.tidl = L; return x } })(this)